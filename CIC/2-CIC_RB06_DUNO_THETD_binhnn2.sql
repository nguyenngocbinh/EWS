/*
 * Author: BinhNN2
 * Database: DB2
 * Project: Ascore Unsecured
 * First date: 2023-11-24
 */

DROP TABLE IF exists tmp_han_muc;
CREATE TABLE tmp_han_muc AS (
WITH uniq_all as(
SELECT
	DISTINCT 
	TO_DATE(SUBSTR(MSPHIEU, 4, 6), 'YYMMDD')  AS DATE_MSP,
    MA_CIC
    ,NGAY_BAOCAO
    ,MA_TCTD
    ,TEN_TCTD    
    ,COALESCE(CAST(HANMUC_THETD  AS DECIMAL(18, 2)), 0.0) AS HANMUC_THETD
--    ,COALESCE(CAST(SOLUONG_THETD AS DECIMAL(18, 2)), 0.0) AS SOLUONG_THETD    
--    ,COALESCE(CAST(SOTIEN_PHAITT AS DECIMAL(18, 2)), 0.0) AS SOTIEN_PHAITT
--    ,COALESCE(CAST(SOTIEN_CHAMTT AS DECIMAL(18, 2)), 0.0) AS SOTIEN_CHAMTT
--    ,COALESCE(CAST(SONGAY_CHAMTT AS DECIMAL(18, 2)), 0.0) AS SONGAY_CHAMTT
FROM
    CSO.CIC_RB06_DUNO_THETD 
)
SELECT DATE_MSP
	,MA_CIC
	,sum(HANMUC_THETD) AS HANMUC_THETD
FROM uniq_all
GROUP BY DATE_MSP, MA_CIC
) WITH DATA ;

DROP TABLE IF exists tmp_du_no;
CREATE TABLE tmp_du_no AS (
WITH uniq_all as(
SELECT
	DISTINCT 
	TO_DATE(SUBSTR(MSPHIEU, 4, 6), 'YYMMDD')  AS DATE_MSP,
    MA_CIC,
    TO_DATE(THANG, 'YYYYMM') AS THANG,    
    COALESCE(CAST(DUNOTHE AS DECIMAL(18, 2)), 0.0) AS DUNOTHE
FROM
    CSO.CIC_RB06_DUNO_12M 
),
grp as(
SELECT DATE_MSP
	, MA_CIC
	, THANG	
	, sum(DUNOTHE) DUNOTHE
FROM uniq_all
GROUP BY DATE_MSP, MA_CIC, THANG
),
tbl AS (
SELECT * 
	,ROW_NUMBER() OVER (PARTITION BY MA_CIC, DATE_MSP ORDER BY THANG ) AS RN  
	,MIN(DUNOTHE) OVER (PARTITION BY MA_CIC, DATE_MSP ORDER BY THANG ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS MIN_DUNOTHE_L3M
    ,MIN(DUNOTHE) OVER (PARTITION BY MA_CIC, DATE_MSP ORDER BY THANG ROWS BETWEEN 5 PRECEDING AND CURRENT ROW) AS MIN_DUNOTHE_L6M
    ,MIN(DUNOTHE) OVER (PARTITION BY MA_CIC, DATE_MSP ORDER BY THANG ROWS BETWEEN 11 PRECEDING AND CURRENT ROW) AS MIN_DUNOTHE_L12M
    ,MAX(DUNOTHE) OVER (PARTITION BY MA_CIC, DATE_MSP ORDER BY THANG ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS MAX_DUNOTHE_L3M
    ,MAX(DUNOTHE) OVER (PARTITION BY MA_CIC, DATE_MSP ORDER BY THANG ROWS BETWEEN 5 PRECEDING AND CURRENT ROW) AS MAX_DUNOTHE_L6M
    ,MAX(DUNOTHE) OVER (PARTITION BY MA_CIC, DATE_MSP ORDER BY THANG ROWS BETWEEN 11 PRECEDING AND CURRENT ROW) AS MAX_DUNOTHE_L12M
    ,AVG(DUNOTHE) OVER (PARTITION BY MA_CIC, DATE_MSP ORDER BY THANG ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS AVG_DUNOTHE_L3M
    ,AVG(DUNOTHE) OVER (PARTITION BY MA_CIC, DATE_MSP ORDER BY THANG ROWS BETWEEN 5 PRECEDING AND CURRENT ROW) AS AVG_DUNOTHE_L6M
    ,AVG(DUNOTHE) OVER (PARTITION BY MA_CIC, DATE_MSP ORDER BY THANG ROWS BETWEEN 11 PRECEDING AND CURRENT ROW) AS AVG_DUNOTHE_L12M
FROM grp
)
SELECT * FROM tbl WHERE rn = 12 
)WITH DATA ;


DROP TABLE IF exists tmp_du_no_12m;
CREATE TABLE tmp_du_no_12m AS (
WITH uniq_all as(
SELECT
	DISTINCT 
	TO_DATE(SUBSTR(MSPHIEU, 4, 6), 'YYMMDD')  AS DATE_MSP,
    MA_CIC,
    TO_DATE(THANG, 'YYYYMM') AS THANG,    
    COALESCE(CAST(DUNOTHE AS DECIMAL(18, 2)), 0.0) AS DUNOTHE
FROM
    CSO.CIC_RB06_DUNO_12M 
),
grp as(
SELECT DATE_MSP
	, MA_CIC
	, THANG	
	, sum(DUNOTHE) DUNOTHE
FROM uniq_all
GROUP BY DATE_MSP, MA_CIC, THANG
),
tbl AS (
SELECT * 
	,ROW_NUMBER() OVER (PARTITION BY MA_CIC, DATE_MSP ORDER BY THANG ) AS RN  
	FROM grp
)
SELECT * FROM tbl WHERE rn <= 12 
)WITH DATA ;

--------------------------------------------------------------
-- JOIN
DROP TABLE IF EXISTS tmp_ur;

CREATE TABLE tmp_ur AS (
SELECT a.DATE_MSP
,a.MA_CIC
,a.MIN_DUNOTHE_L3M /NULLIF(b.HANMUC_THETD,0) AS CC_UTILIZATION_RATE_MIN_L3M
,a.MIN_DUNOTHE_L6M /NULLIF(b.HANMUC_THETD,0) AS CC_UTILIZATION_RATE_MIN_L6M
,a.MIN_DUNOTHE_L12M/NULLIF(b.HANMUC_THETD,0) AS CC_UTILIZATION_RATE_MIN_L12M
,a.MAX_DUNOTHE_L3M /NULLIF(b.HANMUC_THETD,0) AS CC_UTILIZATION_RATE_MAX_L3M
,a.MAX_DUNOTHE_L6M /NULLIF(b.HANMUC_THETD,0) AS CC_UTILIZATION_RATE_MAX_L6M
,a.MAX_DUNOTHE_L12M/NULLIF(b.HANMUC_THETD,0) AS CC_UTILIZATION_RATE_MAX_L12M
,a.AVG_DUNOTHE_L3M /NULLIF(b.HANMUC_THETD,0) AS CC_UTILIZATION_RATE_AVG_L3M
,a.AVG_DUNOTHE_L6M /NULLIF(b.HANMUC_THETD,0) AS CC_UTILIZATION_RATE_AVG_L6M
,a.AVG_DUNOTHE_L12M/NULLIF(b.HANMUC_THETD,0) AS CC_UTILIZATION_RATE_AVG_L12M
FROM tmp_du_no a
JOIN tmp_han_muc B 
ON (a.DATE_MSP = b.DATE_MSP AND a.MA_CIC = b.MA_CIC)
) WITH DATA ;

UPDATE TPBRM1.CIC_FEATURE_STORE_KHCN x
SET 
x.CC_UTILIZATION_RATE_MIN_L3M  = y.CC_UTILIZATION_RATE_MIN_L3M  
,x.CC_UTILIZATION_RATE_MIN_L6M = y.CC_UTILIZATION_RATE_MIN_L6M  
,x.CC_UTILIZATION_RATE_MIN_L12M= y.CC_UTILIZATION_RATE_MIN_L12M 
,x.CC_UTILIZATION_RATE_MAX_L3M = y.CC_UTILIZATION_RATE_MAX_L3M  
,x.CC_UTILIZATION_RATE_MAX_L6M = y.CC_UTILIZATION_RATE_MAX_L6M  
,x.CC_UTILIZATION_RATE_MAX_L12M= y.CC_UTILIZATION_RATE_MAX_L12M 
,x.CC_UTILIZATION_RATE_AVG_L3M = y.CC_UTILIZATION_RATE_AVG_L3M  
,x.CC_UTILIZATION_RATE_AVG_L6M = y.CC_UTILIZATION_RATE_AVG_L6M  
,x.CC_UTILIZATION_RATE_AVG_L12M= y.CC_UTILIZATION_RATE_AVG_L12M
FROM tmp_ur y
WHERE x.DATE_MSP = y.DATE_MSP
      AND x.MA_CIC = y.MA_CIC;
     
DROP TABLE IF EXISTS tmp_ur_12m; 
CREATE TABLE tmp_ur_12m AS (  
WITH ur AS (  
	SELECT a.DATE_MSP
	,a.MA_CIC
	,a.THANG
	,a.rn
	,a.DUNOTHE/NULLIF(b.HANMUC_THETD,0) AS ur
FROM tmp_du_no_12m a
JOIN tmp_han_muc B 
ON (a.DATE_MSP = b.DATE_MSP AND a.MA_CIC = b.MA_CIC)
)
SELECT DATE_MSP
,MA_CIC
,sum(CASE WHEN ur >= 0.25 AND rn >= 10 THEN 1 ELSE 0 end) CC_UR_GREATER_THAN_PER_MONTHS_25_L3M
,sum(CASE WHEN ur >= 0.25 AND rn >= 7  THEN 1 ELSE 0 end) CC_UR_GREATER_THAN_PER_MONTHS_25_L6M
,sum(CASE WHEN ur >= 0.25   		   THEN 1 ELSE 0 end) CC_UR_GREATER_THAN_PER_MONTHS_25_L12M
,sum(CASE WHEN ur >= 0.5  AND rn >= 10 THEN 1 ELSE 0 end) CC_UR_GREATER_THAN_PER_MONTHS_50_L3M
,sum(CASE WHEN ur >= 0.5  AND rn >= 7  THEN 1 ELSE 0 end) CC_UR_GREATER_THAN_PER_MONTHS_50_L6M
,sum(CASE WHEN ur >= 0.5   		       THEN 1 ELSE 0 end) CC_UR_GREATER_THAN_PER_MONTHS_50_L12M
,sum(CASE WHEN ur >= 0.75 AND rn >= 10 THEN 1 ELSE 0 end) CC_UR_GREATER_THAN_PER_MONTHS_75_L3M
,sum(CASE WHEN ur >= 0.75 AND rn >= 7  THEN 1 ELSE 0 end) CC_UR_GREATER_THAN_PER_MONTHS_75_L6M
,sum(CASE WHEN ur >= 0.75   		   THEN 1 ELSE 0 end) CC_UR_GREATER_THAN_PER_MONTHS_75_L12M
,sum(CASE WHEN ur >= 1 	  AND rn >= 10 THEN 1 ELSE 0 end) CC_UR_GREATER_THAN_PER_MONTHS_100_L3M
,sum(CASE WHEN ur >= 1 	  AND rn >= 7  THEN 1 ELSE 0 end) CC_UR_GREATER_THAN_PER_MONTHS_100_L6M
,sum(CASE WHEN ur >= 1   		       THEN 1 ELSE 0 end) CC_UR_GREATER_THAN_PER_MONTHS_100_L12M
,sum(CASE WHEN ur < 0.25  AND rn >= 10 THEN 1 ELSE 0 end) CC_UR_LESS_THAN_PER_MONTHS_25_L3M
,sum(CASE WHEN ur < 0.25  AND rn >= 7  THEN 1 ELSE 0 end) CC_UR_LESS_THAN_PER_MONTHS_25_L6M
,sum(CASE WHEN ur < 0.25   		       THEN 1 ELSE 0 end) CC_UR_LESS_THAN_PER_MONTHS_25_L12M
,sum(CASE WHEN ur < 0.5   AND rn >= 10 THEN 1 ELSE 0 end) CC_UR_LESS_THAN_PER_MONTHS_50_L3M
,sum(CASE WHEN ur < 0.5   AND rn >= 7  THEN 1 ELSE 0 end) CC_UR_LESS_THAN_PER_MONTHS_50_L6M
,sum(CASE WHEN ur < 0.5   		       THEN 1 ELSE 0 end) CC_UR_LESS_THAN_PER_MONTHS_50_L12M
,sum(CASE WHEN ur < 0.75  AND rn >= 10 THEN 1 ELSE 0 end) CC_UR_LESS_THAN_PER_MONTHS_75_L3M
,sum(CASE WHEN ur < 0.75  AND rn >= 7  THEN 1 ELSE 0 end) CC_UR_LESS_THAN_PER_MONTHS_75_L6M
,sum(CASE WHEN ur < 0.75   		       THEN 1 ELSE 0 end) CC_UR_LESS_THAN_PER_MONTHS_75_L12M
,sum(CASE WHEN ur < 1 	  AND rn >= 10 THEN 1 ELSE 0 end) CC_UR_LESS_THAN_PER_MONTHS_100_L3M
,sum(CASE WHEN ur < 1 	  AND rn >= 7  THEN 1 ELSE 0 end) CC_UR_LESS_THAN_PER_MONTHS_100_L6M
,sum(CASE WHEN ur < 1   		       THEN 1 ELSE 0 end) CC_UR_LESS_THAN_PER_MONTHS_100_L12M
FROM ur 
GROUP BY DATE_MSP, MA_CIC
) WITH DATA ;

UPDATE TPBRM1.CIC_FEATURE_STORE_KHCN x
SET 
 x.CC_UR_GREATER_THAN_PER_MONTHS_25_L3M  = y.CC_UR_GREATER_THAN_PER_MONTHS_25_L3M  
,x.CC_UR_GREATER_THAN_PER_MONTHS_25_L6M  = y.CC_UR_GREATER_THAN_PER_MONTHS_25_L6M  
,x.CC_UR_GREATER_THAN_PER_MONTHS_25_L12M = y.CC_UR_GREATER_THAN_PER_MONTHS_25_L12M 
,x.CC_UR_GREATER_THAN_PER_MONTHS_50_L3M  = y.CC_UR_GREATER_THAN_PER_MONTHS_50_L3M  
,x.CC_UR_GREATER_THAN_PER_MONTHS_50_L6M  = y.CC_UR_GREATER_THAN_PER_MONTHS_50_L6M  
,x.CC_UR_GREATER_THAN_PER_MONTHS_50_L12M = y.CC_UR_GREATER_THAN_PER_MONTHS_50_L12M 
,x.CC_UR_GREATER_THAN_PER_MONTHS_75_L3M  = y.CC_UR_GREATER_THAN_PER_MONTHS_75_L3M  
,x.CC_UR_GREATER_THAN_PER_MONTHS_75_L6M  = y.CC_UR_GREATER_THAN_PER_MONTHS_75_L6M  
,x.CC_UR_GREATER_THAN_PER_MONTHS_75_L12M = y.CC_UR_GREATER_THAN_PER_MONTHS_75_L12M 
,x.CC_UR_GREATER_THAN_PER_MONTHS_100_L3M = y.CC_UR_GREATER_THAN_PER_MONTHS_100_L3M 
,x.CC_UR_GREATER_THAN_PER_MONTHS_100_L6M = y.CC_UR_GREATER_THAN_PER_MONTHS_100_L6M 
,x.CC_UR_GREATER_THAN_PER_MONTHS_100_L12M= y.CC_UR_GREATER_THAN_PER_MONTHS_100_L12M
,x.CC_UR_LESS_THAN_PER_MONTHS_25_L3M     = y.CC_UR_LESS_THAN_PER_MONTHS_25_L3M     
,x.CC_UR_LESS_THAN_PER_MONTHS_25_L6M     = y.CC_UR_LESS_THAN_PER_MONTHS_25_L6M     
,x.CC_UR_LESS_THAN_PER_MONTHS_25_L12M    = y.CC_UR_LESS_THAN_PER_MONTHS_25_L12M    
,x.CC_UR_LESS_THAN_PER_MONTHS_50_L3M     = y.CC_UR_LESS_THAN_PER_MONTHS_50_L3M     
,x.CC_UR_LESS_THAN_PER_MONTHS_50_L6M     = y.CC_UR_LESS_THAN_PER_MONTHS_50_L6M     
,x.CC_UR_LESS_THAN_PER_MONTHS_50_L12M    = y.CC_UR_LESS_THAN_PER_MONTHS_50_L12M    
,x.CC_UR_LESS_THAN_PER_MONTHS_75_L3M     = y.CC_UR_LESS_THAN_PER_MONTHS_75_L3M     
,x.CC_UR_LESS_THAN_PER_MONTHS_75_L6M     = y.CC_UR_LESS_THAN_PER_MONTHS_75_L6M     
,x.CC_UR_LESS_THAN_PER_MONTHS_75_L12M    = y.CC_UR_LESS_THAN_PER_MONTHS_75_L12M    
,x.CC_UR_LESS_THAN_PER_MONTHS_100_L3M    = y.CC_UR_LESS_THAN_PER_MONTHS_100_L3M    
,x.CC_UR_LESS_THAN_PER_MONTHS_100_L6M    = y.CC_UR_LESS_THAN_PER_MONTHS_100_L6M    
,x.CC_UR_LESS_THAN_PER_MONTHS_100_L12M   = y.CC_UR_LESS_THAN_PER_MONTHS_100_L12M 
FROM tmp_ur_12m y
WHERE x.DATE_MSP = y.DATE_MSP
      AND x.MA_CIC = y.MA_CIC;


-- CLEAR TMP
DROP TABLE IF exists tmp_han_muc;
DROP TABLE IF exists tmp_du_no;
DROP TABLE IF exists tmp_du_no_12m;
DROP TABLE IF EXISTS tmp_ur;
DROP TABLE IF EXISTS tmp_ur_12m;
