--1. Bảng CSO.CIC_RB06_DUNO_THETD
-- Map thêm TONG_DU_NO
DROP TABLE IF EXISTS rb_dnttd;
CREATE TEMPORARY TABLE rb_dnttd AS
(SELECT DISTINCT 
    TO_DATE(a.RPT_DT, 'YYYYMMDD') AS RPT_DT,
    a.MSPHIEU,
    a.MA_CIC,
    TO_DATE(a.NGAY_BAOCAO, 'YYYYMMDD') AS NGAY_BAOCAO,
    COUNT(*) OVER (PARTITION BY a.RPT_DT, a.MA_CIC, a.MA_TCTD) AS CC_TCTD,
    --a.MA_TCTD,
    COALESCE(CAST(a.SOLUONG_THETD AS DECIMAL(18, 2)), 0.0) AS CC_COUNT,
    COALESCE(CAST(a.HANMUC_THETD AS DECIMAL(18, 2)), 0.0) AS CC_LIMIT,
    COALESCE(CAST(a.SOTIEN_PHAITT AS DECIMAL(18, 2)), 0.0) AS CC_PAYMENT_AMOUNT,
    COALESCE(CAST(a.SOTIEN_CHAMTT AS DECIMAL(18, 2)), 0.0) AS CC_OVERDUE_AMOUNT,
    COALESCE(CAST(a.SONGAY_CHAMTT AS DECIMAL(18, 2)), 0.0) AS CC_OVERDUE_DAYS,
    COALESCE(CAST(b.DUNOTHE AS DECIMAL(18, 2)), 0.0) AS CC_OS
FROM CSO.CIC_RB06_DUNO_THETD a
LEFT JOIN CSO.CIC_RB06_DUNO_12M b
ON a.RPT_DT = b.RPT_DT
AND a.MSPHIEU = b.MSPHIEU
AND a.MA_CIC = b.MA_CIC);

-- Tính count, ratio KH có thẻ, TCTD,...
WITH TEMP AS (
    SELECT 
        RPT_DT,
        MA_CIC,
        --MA_TCTD,
        --COUNT(*) OVER (PARTITION BY RPT_DT, MA_CIC, MA_TCTD) AS CC_TCTD,
        CC_TCTD,
        CC_COUNT,
        CC_OS,
        CC_LIMIT,
        CC_PAYMENT_AMOUNT,
        CC_OVERDUE_AMOUNT,
        CC_OVERDUE_DAYS,
        --AVG(CC_OS) OVER (PARTITION BY RPT_DT, MA_CIC, MA_TCTD) AS CC_OS_AVG_BY_TCTD,
        AVG(CC_OS) OVER (PARTITION BY RPT_DT, MA_CIC, CC_TCTD) AS CC_OS_AVG_BY_TCTD,
        AVG(CC_OS) OVER (PARTITION BY RPT_DT, MA_CIC, CC_COUNT) AS CC_OS_AVG_BY_CARD,
        SUM(CASE WHEN CC_OVERDUE_DAYS = 0 THEN 1 ELSE 0 END) OVER (PARTITION BY RPT_DT, MA_CIC) / 
            NULLIF(CC_TCTD, 0) AS CC_TCTD_NORM_RATIO,
        SUM(CASE WHEN CC_OVERDUE_DAYS = 0 THEN 1 ELSE 0 END) OVER (PARTITION BY RPT_DT, MA_CIC) / 
            NULLIF(CC_COUNT, 0) AS CC_COUNT_NORM_RATIO,
        SUM(CASE WHEN CC_OVERDUE_DAYS = 0 THEN CC_OS ELSE 0 END) OVER (PARTITION BY RPT_DT, MA_CIC) / 
            NULLIF(SUM(CC_OS) OVER (PARTITION BY RPT_DT, MA_CIC), 0) AS CC_OS_NORM_RATIO,
        SUM(CASE WHEN CC_OVERDUE_DAYS = 0 THEN CC_LIMIT ELSE 0 END) OVER (PARTITION BY RPT_DT, MA_CIC) / 
            NULLIF(SUM(CC_LIMIT) OVER (PARTITION BY RPT_DT, MA_CIC), 0) AS CC_LIMIT_NORM_RATIO
    FROM rb_dnttd
)
-- Tính sum, min, max, avg
SELECT
    RPT_DT,
    MA_CIC,
    CC_TCTD,
    CC_COUNT,
    CC_OS_AVG_BY_TCTD,
    CC_OS_AVG_BY_CARD,
    CC_TCTD_NORM_RATIO,
    CC_COUNT_NORM_RATIO,
    CC_OS_NORM_RATIO,
    CC_LIMIT_NORM_RATIO,
    SUM(CC_OS) AS CC_OS_SUM,
    MIN(CC_OS) AS CC_OS_MIN,
    MAX(CC_OS) AS CC_OS_MAX,
    AVG(CC_OS) AS CC_OS_AVG,
    SUM(CC_LIMIT) AS CC_LIMIT_SUM,
    MIN(CC_LIMIT) AS CC_LIMIT_MIN,
    MAX(CC_LIMIT) AS CC_LIMIT_MAX,
    AVG(CC_LIMIT) AS CC_LIMIT_AVG,
    SUM(CC_PAYMENT_AMOUNT) AS CC_PAYMENT_AMOUNT_SUM,
    MIN(CC_PAYMENT_AMOUNT) AS CC_PAYMENT_AMOUNT_MIN,
    MAX(CC_PAYMENT_AMOUNT) AS CC_PAYMENT_AMOUNT_MAX,
    AVG(CC_PAYMENT_AMOUNT) AS CC_PAYMENT_AMOUNT_AVG,
    SUM(CC_OVERDUE_AMOUNT) AS CC_OVERDUE_AMOUNT_SUM,
    MIN(CC_OVERDUE_AMOUNT) AS CC_OVERDUE_AMOUNT_MIN,
    MAX(CC_OVERDUE_AMOUNT) AS CC_OVERDUE_AMOUNT_MAX,
    AVG(CC_OVERDUE_AMOUNT) AS CC_OVERDUE_AMOUNT_AVG,
    SUM(CC_OVERDUE_DAYS) AS CC_OVERDUE_DAYS_SUM,
    MIN(CC_OVERDUE_DAYS) AS CC_OVERDUE_DAYS_MIN,
    MAX(CC_OVERDUE_DAYS) AS CC_OVERDUE_DAYS_MAX,
    AVG(CC_OVERDUE_DAYS) AS CC_OVERDUE_DAYS_AVG
FROM TEMP
GROUP BY RPT_DT, MA_CIC, CC_TCTD, CC_COUNT, CC_OS_AVG_BY_TCTD, CC_OS_AVG_BY_CARD, CC_TCTD_NORM_RATIO, CC_COUNT_NORM_RATIO, CC_OS_NORM_RATIO, CC_LIMIT_NORM_RATIO;