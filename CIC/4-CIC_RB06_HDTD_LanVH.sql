CREATE OR REPLACE PROCEDURE CIC_RB06_HDTD_LANVH (IN start_date DATE, IN end_date DATE)
LANGUAGE SQL
BEGIN
   -- Drop the temporary table if it exists
   DROP TABLE IF EXISTS SESSION.tmp_rb06_hdtd;


	DECLARE GLOBAL TEMPORARY TABLE SESSION.tmp_rb06_hdtd 
	   (
		   RPT_DT VARCHAR(50), MSPHIEU VARCHAR(20), MA_CIC VARCHAR(50), SO_HDTD VARCHAR(200), MA_TCTD VARCHAR(100), NGAYKI_HDTD VARCHAR(100), NGAYKT_HDTD VARCHAR(100)
	   ) WITH REPLACE ON
	COMMIT PRESERVE ROWS;

-- Insert into the temporary table
   INSERT INTO SESSION.tmp_rb06_hdtd (RPT_DT, MSPHIEU, MA_CIC, SO_HDTD, MA_TCTD, NGAYKI_HDTD, NGAYKT_HDTD)
   SELECT RPT_DT, MSPHIEU, MA_CIC, SO_HDTD, MA_TCTD, NGAYKY_HDTD, NGAYKT_HDTD
	FROM CSO.CIC_RB06_HDTD
	WHERE TO_DATE(RPT_DT, 'YYYYMMDD') BETWEEN start_date AND end_date;

-- Drop the second temporary table if it exists
   DROP TABLE IF EXISTS SESSION.tmp_CIC_RB06_HDTD;


	DECLARE GLOBAL TEMPORARY TABLE SESSION.tmp_CIC_RB06_HDTD AS 
	   (
		   SELECT RPT_DT, MA_CIC, MSPHIEU, COUNT(CASE WHEN TO_DATE(NGAYKI_HDTD, 'YYYYMMDD') >= TO_DATE(RPT_DT, 'YYYYMMDD') - INTERVAL '3 MONTHS' THEN 1 END) AS CT_OPEN_L3M, COUNT(CASE WHEN TO_DATE(NGAYKI_HDTD, 'YYYYMMDD') >= TO_DATE(RPT_DT, 'YYYYMMDD') - INTERVAL '6 MONTHS' THEN 1 END) AS CT_OPEN_L6M, COUNT(CASE WHEN TO_DATE(NGAYKI_HDTD, 'YYYYMMDD') >= TO_DATE(RPT_DT, 'YYYYMMDD') - INTERVAL '12 MONTHS' THEN 1 END) AS CT_OPEN_L12M, COUNT(CASE WHEN TO_DATE(NGAYKI_HDTD, 'YYYYMMDD') >= TO_DATE(RPT_DT, 'YYYYMMDD') - INTERVAL '24 MONTHS' THEN 1 END) AS CT_OPEN_L24M, COUNT(CASE WHEN TO_DATE(NGAYKT_HDTD, 'YYYYMMDD') >= TO_DATE(RPT_DT, 'YYYYMMDD') - INTERVAL '3 MONTHS' THEN 1 END) AS CT_CLOSE_L3M, COUNT(CASE WHEN TO_DATE(NGAYKT_HDTD, 'YYYYMMDD') >= TO_DATE(RPT_DT, 'YYYYMMDD') - INTERVAL '6 MONTHS' THEN 1 END) AS CT_CLOSE_L6M, COUNT(CASE WHEN TO_DATE(NGAYKT_HDTD, 'YYYYMMDD') >= TO_DATE(RPT_DT, 'YYYYMMDD') - INTERVAL '12 MONTHS' THEN 1 END) AS CT_CLOSE_L12M, COUNT(CASE WHEN TO_DATE(NGAYKT_HDTD, 'YYYYMMDD') >= TO_DATE(RPT_DT, 'YYYYMMDD') - INTERVAL '24 MONTHS' THEN 1 END) AS CT_CLOSE_L24M, COUNT(CASE WHEN TO_DATE(NGAYKT_HDTD, 'YYYYMMDD') <= TO_DATE(RPT_DT, 'YYYYMMDD') + INTERVAL '3 MONTHS' THEN 1 END) AS CT_CLOSE_N3M, COUNT(CASE WHEN TO_DATE(NGAYKT_HDTD, 'YYYYMMDD') <= TO_DATE(RPT_DT, 'YYYYMMDD') + INTERVAL '6 MONTHS' THEN 1 END) AS CT_CLOSE_N6M, COUNT(CASE WHEN TO_DATE(NGAYKT_HDTD, 'YYYYMMDD') <= TO_DATE(RPT_DT, 'YYYYMMDD') + INTERVAL '12 MONTHS' THEN 1 END) AS CT_CLOSE_N12M, COUNT(CASE WHEN TO_DATE(NGAYKT_HDTD, 'YYYYMMDD') <= TO_DATE(RPT_DT, 'YYYYMMDD') + INTERVAL '24 MONTHS' THEN 1 END) AS CT_CLOSE_N24M
	FROM SESSION.tmp_rb06_hdtd
	GROUP BY RPT_DT, MSPHIEU, MA_CIC
	   ) WITH DATA ORGANIZE BY ROW;

-- Update the target table with the calculated values from the temporary table
   UPDATE TPBRM1.CIC_FEATURE_STORE_KHCN x
	SET x.CT_OPEN_L3M = y.CT_OPEN_L3M
	, x.CT_OPEN_L6M = y.CT_OPEN_L6M
	, x.CT_OPEN_L12M = y.CT_OPEN_L12M
	, x.CT_OPEN_L24M = y.CT_OPEN_L24M
	, x.CT_CLOSE_L3M = y.CT_CLOSE_L3M
	, x.CT_CLOSE_L6M = y.CT_CLOSE_L6M
	, x.CT_CLOSE_L12M = y.CT_CLOSE_L12M
	, x.CT_CLOSE_L24M = y.CT_CLOSE_L24M
	, x.CT_CLOSE_N3M = y.CT_CLOSE_N3M
	, x.CT_CLOSE_N6M = y.CT_CLOSE_N6M
	, x.CT_CLOSE_N12M = y.CT_CLOSE_N12M
	, x.CT_CLOSE_N24M = y.CT_CLOSE_N24M
	FROM SESSION.tmp_CIC_RB06_HDTD y
	WHERE x.RPT_DT = y.RPT_DT
	AND x.MSPHIEU = y.MSPHIEU
	AND x.MA_CIC = y.MA_CIC;

-- CLEAR TMP
	DROP TABLE IF EXISTS SESSION.tmp_rb06_hdtd;
	DROP TABLE IF EXISTS SESSION.tmp_CIC_RB06_HDTD;

-- Commit the transaction
   COMMIT;

END
